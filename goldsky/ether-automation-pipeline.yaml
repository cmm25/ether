name: ether-automation-pipeline
apiVersion: 3
resource_size: s

sources:
  ethereum_logs:
    dataset_name: ethereum_sepolia.raw_logs
    version: 1.0.0
    type: dataset
    start_at: latest

transforms:
  # Detect campaign end events for automation
  campaign_end_triggers:
    sql: |
      SELECT
        transaction_hash,
        SPLIT_INDEX(topics, ',', 1) as campaign_id_topic,
        block_number,
        block_timestamp,
        -- Extract campaign end details
        CASE
          WHEN topics LIKE '0xCAMPAIGN_ENDED_SIGNATURE%' THEN 'natural_end'
          WHEN topics LIKE '0xCAMPAIGN_FORCE_ENDED_SIGNATURE%' THEN 'force_ended'
          ELSE 'unknown'
        END as end_type,
        -- Flag for automation processing
        'pending_processing' as automation_status,
        CONCAT('campaign_end_', SPLIT_INDEX(topics, ',', 1)) as trigger_key
      FROM ethereum_logs
      WHERE address = '0x0769A45dc3CAeb1B3F311B8bb9c2C1e89ebF95Ba'
        AND (topics LIKE '0xCAMPAIGN_ENDED_SIGNATURE%'
          OR topics LIKE '0xCAMPAIGN_FORCE_ENDED_SIGNATURE%')
    primary_key: trigger_key

  # Get final winners for ended campaigns
  final_winners:
    sql: |
      WITH campaign_ends AS (
        SELECT DISTINCT campaign_id_topic as campaign_id
        FROM campaign_end_triggers
        WHERE automation_status = 'pending_processing'
      ),
      final_vote_counts AS (
        SELECT
          v.campaign_id,
          v.submission_id,
          COUNT(*) as final_vote_count,
          ROW_NUMBER() OVER (
            PARTITION BY v.campaign_id
            ORDER BY COUNT(*) DESC, MIN(v.block_timestamp) ASC
          ) as final_rank
        FROM (
          SELECT
            SPLIT_INDEX(topics, ',', 1) as campaign_id,
            SPLIT_INDEX(topics, ',', 2) as submission_id,
            block_timestamp
          FROM ethereum_logs
          WHERE address = '0xD84125E5691da5C11d918552F4fC5B8835D074F3'
            AND topics LIKE '0xf6ed5a0362706e33942c258dd867d1664e91a7653843a7c3459a857db97287ae%'
        ) v
        INNER JOIN campaign_ends ce ON v.campaign_id = ce.campaign_id
        GROUP BY v.campaign_id, v.submission_id
      )
      SELECT
        campaign_id,
        submission_id,
        final_vote_count,
        final_rank,
        CASE WHEN final_rank <= 5 THEN true ELSE false END as is_winner,
        'ready_for_minting' as mint_status,
        CONCAT(campaign_id, '_', submission_id, '_winner') as winner_key
      FROM final_vote_counts
      WHERE final_rank <= 5
    primary_key: winner_key

sinks:
  # Campaign end triggers for automation
  automation_triggers_sink:
    type: postgres
    table: campaign_automation_triggers
    schema: ether_live
    from: campaign_end_triggers
    secret_name: HOSTED_POSTGRES_CMDWV3QIO0

  # Final winners for NFT minting
  final_winners_sink:
    type: postgres
    table: campaign_final_winners
    schema: ether_live
    from: final_winners
    secret_name: HOSTED_POSTGRES_CMDWV3QIO0